syntax = "proto3";
package scatterbrain;

import "scatterbrain/transfer.proto";
import "scatterbrain/uuid.proto";

message MeshtasticForwardSettings {
    optional fixed32 force_channel = 1;
}

enum MeshtasticAckCode {
    MESHTASTIC_ACK_UNKNOWN = 0;
    TRANSACTION = 1;
    WAIT = 2;
    FULL = 3;
    FAIL = 4;
}


message MeshtasticAnnounce {
    ProtoUuid luid = 1;
    bytes merkle_root = 2;
}

message MeshtasticAnnounceAck {
    ProtoUuid luid = 1;
    MeshtasticAckCode code = 2;
    bytes merkle_root = 3;
}

message MeshtasticAnnounceSynAck {
    MeshtasticAckCode code = 1;
}

message MeshtasticStream {
    uint32 seq = 1;
    bytes payload = 2;
    bool end = 3;
}

message MeshtasticMerkle {
    uint32 seq = 1;
    repeated bytes hashes = 2;
    bool end = 3;
}

enum MeshtasticErrCode {
    UNKNOWN_ERROR = 0;
    INVALID_ARGUMENT = 1;
}

message MeshtasticErr {
    MeshtasticErrCode code = 1;
    bool fatal = 2;
}
