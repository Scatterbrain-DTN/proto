syntax = "proto3";
package scatterbrain;

import "scatterbrain/uuid.proto";

// header + metadata for a file, message or data stream
message BlockData {
    message MessageFlags {
        MessageFlag tag = 1;
        optional bytes blob = 2;
    }
    repeated ProtoUuid from_fingerprint = 2;
    repeated ProtoUuid to_fingerprint = 3;
    string application = 4;
    string filename = 5;
    uint32 ttl = 6;
    string extension = 7;
    string mime = 8;
    uint32 sessionid = 9;
    bool todisk = 10;
    bool endofstream = 11;
    uint64 send_date = 12;
    repeated bytes nexthashes = 13; //size of this is fragment count
    bytes sig = 14;
    repeated MessageFlags flags = 15;
}

// arbitrary metadata about the network
// used for building more complex routing algorithms someday
message RoutingMetadata {
    ProtoUuid id = 1;
    bool endofstream = 2;
    map<string, bytes> keyval = 3;
}

// body of file, message, or data stream.
message BlockSequence {
    uint32 seqnum = 2;
    bool end = 3;
    oneof data {
        bytes data_contents = 4;
        bool data_native = 5;
    }
}


enum MessageFlag {
    MESSAGE_FLAG_UNKNOWN = 0;
    PLAINTEXT = 1;
    FORWARD_MESHTASTIC = 2;
    END_RESERVED = 127;
    LIMIT = 511;
}
